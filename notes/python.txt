highlighted_poems = "Afterimages:Audre Lorde:1997,  The Shadow:William Carlos Williams:1915, Ecstasy:Gabriela Mistral:1925,   Georgia Dusk:Jean Toomer:1923,   Parting Before Daybreak:An Qi:2014, The Untold Want:Walt Whitman:1871, Mr. Grumpledump's Song:Shel Silverstein:2004, Angel Sound Mexico City:Carmen Boullosa:2013, In Love:Kamala Suraiyya:1965, Dream Variations:Langston Hughes:1994, Dreamwood:Adrienne Rich:1987"



highlighted_poems_list = highlighted_poems.split(',')
print(highlighted_poems_list)

highlighted_poems_stripped = []

for i in highlighted_poems_list:
 print(i.strip())
 highlighted_poems_stripped.append(i.strip())

print(highlighted_poems_stripped)

highlighted_poems_details = []

for i in highlighted_poems_stripped:
  print(i)
  high = i.split(':')
  highlighted_poems_details.append(high)

titles = []
poets = []
dates = []

for high in highlighted_poems_details:
  titles.append(high[0])
  poets.append(high[1])
  dates.append(high[2])

for i in len(titles):
  print('The poem {title} was published by {poet} in {date').format(title=title[i], poet=poet[i], date=dates[i])



-----Hackerrank Puzzles-----

---Minion Game---

stuart = 0 #c
kevin = 0 #v
    
vowels = ['A', 'E', 'I', 'O', 'U']
    
for i in range(0, len(string)):
    if string[i] in vowels:
        score = (len(string) - i)
        kevin += score
    else:
        score = (len(string) - i)
        stuart += score
            
if stuart > kevin:
    print('Stuart ', end='')
    print(stuart)
elif kevin > stuart:
    print('Kevin ', end='')
    print(kevin)
else:
    print('Draw')


---Leap Year---

def is_leap(year):
    leap = True
    if year % 400 == 0:
        return leap
    elif year % 100 == 0 and year % 400 != 0:
        leap = False
    elif year % 4 == 0:
        return leap
    else:
        leap = False
    
    return leap

---Merge the Tools---

def merge_the_tools(string, k):
    nums = [i for i in range(0, len(string)+1, k)]
    
    if k == 1:
        for i in range(0, len(string)+1):
            print(string[i])
    
    if k != 1:
        for i in range(0, k):
            piece = string[nums[i]:nums[i+1]]
            split_piece = []
        
            final_string = ''
        
            for i in piece:
                if i not in split_piece:
                    split_piece += i
                    final_string += i
                    continue
                else:
                    pass
        
            print(final_string)


#Best Solution - You can't have duplicate keys so it adds everything to a fresh dict and prints the keys in order

def merge_the_tools(string, k):
    
    for i in range(0,len(string),k):
        y=string[i:i+k]
        print("".join(dict.fromkeys(y)))